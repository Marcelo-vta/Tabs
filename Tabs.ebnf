Block = "{" { Statement } "}";
Statement = (Assignment | SongAssignment | Print | While | Condition | Play | Î») ";" ;

Assignment = Identifier, "=", BoolExpression ;
SongAssignment = SongIdentifier, "=", SongExpression ;

Print = "print", "(", ( BoolExpression | SongExpression ), ")" ;
Play = "play", "(", SongExpression, ")" ;


While = "(", BoolExpression, ")", Block ;
Condition = "if", "(", BoolExpression, ")", Block ["else" Block] ;

BoolExpression = BoolTerm {"or", BoolTerm} ;
BoolTerm = RelExpression {"and", RelExpression} ;
RelExpression = ( Expression | SongExpression ) {("==" | "<" | ">" | "<=" | ">="), ( Expression | SongExpression)} ;


Expression = Term {("+" | "-"), Term} ;
Term = Factor {("*" | "/"), Factor} ;
Factor = (Number | Identifier | ("+" | "-" | "!"), Factor | "(", BoolExpression, ")" | Input ) ;

SongExpression = ( SongTerm | SongTermAlt ) {("++" | "--"), ( SongTerm | SongTermAlt )} ;

SongTerm = SongFactor {("**"), Factor} ;
SongTermAlt = Factor {("**"), SongFactor} ;

SongFactor = ( Song | SongIdentifier | "(", SongExpression, ")" ) ;

Number = Digit, {Digit}
SongIdentifier = UpperLetter, { Digit | UpperLetter } ;
Identifier = { Letter | UpperLetter }, { Letter | UpperLetter | Digit }, Letter, { Letter | UpperLetter | Digit } ;
Song = '"', {Tab}, '"'

UpperLetter = ( A | ... | Z )
Letter = ( a | ... | z ) ;

Tab = "|", Sring [Digit], "-", Sring [Digit], "-", Sring [Digit], "-", Sring [Digit], "-", Sring [Digit], "-", Sring [Digit], "|"
Digit = ( 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 ) ;
String = ( 0 | 1 | 2)

Input = "get" ;